import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error

# Step 1: Load the dataset
data = pd.read_csv("house_prices_train.csv")  # Update with your dataset file name

# Step 2: Preprocess the data
features = data[['GrLivArea', 'BedroomAbvGr', 'FullBath']]  # Select relevant columns
target = data['SalePrice']
# Handle missing values if any

# Step 3: Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(features, target, test_size=0.2, random_state=42)

# Step 4: Initialize and train a linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Step 5: Evaluate the model's performance
train_rmse = mean_squared_error(y_train, model.predict(X_train), squared=False)
test_rmse = mean_squared_error(y_test, model.predict(X_test), squared=False)

print(f"Train RMSE: {train_rmse}")
print(f"Test RMSE: {test_rmse}")

# Step 6: Make predictions on new data if needed
# For example:
# new_data = pd.DataFrame({'GrLivArea': [2000], 'BedroomAbvGr': [3], 'FullBath': [2]})
# predicted_price = model.predict(new_data)
